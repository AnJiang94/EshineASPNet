using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Collections;
using System.Data;
using System.Text;
using System.Xml;
using smsWebRef;
using Com.Alipay;
public partial class ordersubmitted : PageBases
{
    Bll.OrdersBll ob = new Bll.OrdersBll();
    Model.tab_orders orders = new Model.tab_orders();
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
           // this.CheckUser((Hashtable)Application["Online"]);
            if (Request.QueryString["tran"] != null && Request.QueryString["tran"].ToString() != "")
            {
                showprice(Request.QueryString["tran"].ToString());
                this.Panel13.Visible = true;
                this.Panel1.Visible = true;
            }
            else if (Request.QueryString["onlinepay"] != null && Request.QueryString["onlinepay"].ToString() != "")
            {
                ViewState["ordnum"] = Request.QueryString["onlinepay"].ToString();
                showprice(Request.QueryString["onlinepay"].ToString());
                this.Panel1.Visible = true;
                this.Panel2.Visible = true;
            }
            else if (Request.QueryString["ordnum"] != null && Request.QueryString["ordnum"].ToString() != "")
            {
                sendsms(Request.QueryString["ordnum"].ToString());
            }
            if(Request.QueryString["orderID"] != null && Request.QueryString["orderID"].ToString() != "")
            {
                orders.orderID = int.Parse(Request.QueryString["orderID"].ToString());
                orders = ob.getorders(orders);

                if (orders.payMethod == "转账支付")
                {
                    Response.Redirect("ordersubmitted.aspx?tran=" + int.Parse(Request.QueryString["orderID"].ToString()), true);
                }
                else
                {
                    Response.Redirect("ordersubmitted.aspx?onlinepay=" + int.Parse(Request.QueryString["orderID"].ToString()), true);
                }
            }
        }
    }

    void showprice(string ordnum)
    {
        orders.orderID = int.Parse(ordnum);
        orders = ob.getorders(orders);
        this.Label2.Text = orders.examBill + "元";
    }

    //发送短信
    
    protected void sendsms(string ordnum)
    {
        ISmsService4XML sms = new SmsService4XMLClient();
        XmlDocument doc = new XmlDocument();

        
        orders.orderID = int.Parse(ordnum);
        orders = ob.getorders(orders);

        if (orders.orderStatus != "约检成功")
        {
            return;
        }

        Bll.SupplierBll sb=new Bll.SupplierBll();

        String Account = "dh7748";
        String Password = PublicClass.smsmd5(System.Configuration.ConfigurationManager.AppSettings["smspassword"]);
        String Phone = orders.personMobile;
        String sendtime = "";
        String sign = "";
        String subcode = "";
        String Content = "尊敬的"+(orders.customerName!=""?orders.customerName:orders.relativeName)+
            "先生/小姐您好，您已成功预约"  + orders.examBranch.Replace("其他专业体检机构", "") +
            "的体检服务，请于"+orders.examDate.ToShortDateString()+
            "到" + MediPlus.reserveexam.branchaddress(orders.examBranch, orders.examCity) + "体检。Medi-plus服务咨询电话：4000993363";
        String message = "<?xml version='1.0' encoding='UTF-8'?><message>"
            + "<account>" + Account + "</account>" + "<password>"
            + Password + "</password>"
            + "<msgid></msgid>"
            + "<phones>" + Phone + "</phones><content>"
            + Content + "</content><sign>" + sign + "</sign>"
            + "<subcode>" + subcode + "</subcode><sendtime>" + sendtime + "</sendtime>"
            + "</message>";

        sms.submit(message);

        PublicClass pc = new PublicClass();
        pc.addlog(orders.orderID.ToString(), "", "", "预约成功短信", Content, "");
    }

    void goalipay(int ordernum)
    {
        orders.orderID = ordernum;
        orders = ob.getorders(orders);

        //支付类型
        string payment_type = "1";
        string notify_url = System.Configuration.ConfigurationManager.AppSettings["notify_url"];
        string return_url = System.Configuration.ConfigurationManager.AppSettings["return_url"];
        string seller_email = "pay@medi-plus.cn";

        string out_trade_no = ordernum.ToString();
        //订单名称
        string subject = (string)GetGlobalResourceObject("GResource", "MPpackage");
        //付款金额
        string total_fee = orders.examBill.ToString();
        //订单描述
        string body = orders.examPackage;
        //商品展示地址
        string show_url = "";

        //防钓鱼时间戳
        string anti_phishing_key = Submit.Query_timestamp();
        //若要使用请调用类文件submit中的query_timestamp函数

        //客户端的IP地址
        string exter_invoke_ip = "";
        //非局域网的外网IP地址，如：221.0.0.1


        ////////////////////////////////////////////////////////////////////////////////////////////////

        //把请求参数打包成数组
        SortedDictionary<string, string> sParaTemp = new SortedDictionary<string, string>();
        sParaTemp.Add("partner", Config.Partner);
        sParaTemp.Add("_input_charset", Config.Input_charset.ToLower());
        sParaTemp.Add("service", "create_direct_pay_by_user");
        sParaTemp.Add("payment_type", payment_type);
        sParaTemp.Add("notify_url", notify_url);
        sParaTemp.Add("return_url", return_url);
        sParaTemp.Add("seller_email", seller_email);
        sParaTemp.Add("out_trade_no", out_trade_no);
        sParaTemp.Add("subject", subject);
        sParaTemp.Add("total_fee", total_fee);
        sParaTemp.Add("body", body);
        sParaTemp.Add("show_url", show_url);
        sParaTemp.Add("anti_phishing_key", anti_phishing_key);
        sParaTemp.Add("exter_invoke_ip", exter_invoke_ip);

        //建立请求
        string sHtmlText = Submit.BuildRequest(sParaTemp, "get", "确认");
        Response.Write(sHtmlText );
    }
    protected void LinkButton1_Click(object sender, EventArgs e)
    {
        goalipay(int.Parse(ViewState["ordnum"].ToString()));
    }
}