using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.Script.Serialization;
using MeiNianWebRef;
using Com.Alipay;
using System.Collections;
using ikang;
public partial class viewreservation : PageBases
{
    Model.tab_customers modelCu = new Model.tab_customers();
    Model.tab_relatives modelrel = new Model.tab_relatives();
    Model.tab_orders modelod = new Model.tab_orders();
    Bll.CustomerBll Cb = new Bll.CustomerBll();
    Bll.RelativeBLL rb = new Bll.RelativeBLL();
    Bll.OrdersBll ob = new Bll.OrdersBll();
    ikangservice iks = new ikangservice();
    HealthService mns = new HealthService();
    PublicClass pc = new PublicClass();
    public string relcss = "";
    protected void Page_Load(object sender, EventArgs e)
    {
        if (!Page.IsPostBack)
        {
            //this.CheckUser((Hashtable)Application["Online"]);
        }

        modelCu.customerID = int.Parse(Session["id"].ToString());
        modelCu = Cb.getCustomer(modelCu);

        if (modelCu.packagecode == "入职体检")
        {
            this.GridView1.Columns[5].Visible = false;
            this.GridView1.Columns[6].Visible = false;

  
            this.HyperLink2.NavigateUrl = "reserveBindexam.aspx";
            relcss = "hidden";
        }

        if (!Page.IsPostBack)
        {
            

            if (!ob.hasarrangement(modelCu.customerID))
            {
                this.Panel1.Visible = true;
            }
            if (!ob.hasRelarrangement(modelCu.customerID))
            {
                this.Panel2.Visible = true;
            }
        }

    }
    bool cancelsupplierorder()
    {
        string s;
        if (modelod.examSupplier == "爱康国宾")
        {
            if (modelod.supplierOrderID == "" && modelod.cardNumber == "") return false;
            s = iks.CancelOrder(modelod.supplierOrderID, modelod.cardNumber);
            JavaScriptSerializer jss = new JavaScriptSerializer();
            Dictionary<string, object> json = (Dictionary<string, object>)jss.DeserializeObject(s);
            object value;////{"code":"1","message":"取消成功","list":null}
            if (json.TryGetValue("code", out value) && value.ToString() == "1")
            {
                return true;
            }
        }
        else if (modelod.examSupplier == "美年大健康")
        {
            s = mns.CancelOrder(modelCu.customerCompanycode, modelod.customerCode, modelod.examhosip);
            if (s == "成功")
            {
                return true;
            }
        }
        return false;
    }

    bool cancelsupplierRelorder(  )
    {
        string s;
        if (modelod.examSupplier == "爱康国宾")
        {
            s = iks.CancelOrder(modelod.supplierOrderID, modelod.cardNumber);
            JavaScriptSerializer jss = new JavaScriptSerializer();
            Dictionary<string, object> json = (Dictionary<string, object>)jss.DeserializeObject(s);
            object value;////{"code":"1","message":"取消成功","list":null}
            if (json.TryGetValue("code", out value) && value.ToString() == "1")
            {
                return true;
            }
        }
        else if (modelod.examSupplier == "美年大健康")
        {
            s = mns.CancelOrder(modelCu.customerCompanycode, modelod.personIDcard, modelod.examhosip);
            if (s == "成功")
            {
                return true;
            }
        }
        
        return false;
    }
    protected void BtnDelete_Click(object sender, EventArgs e)
    {
        try
        {
            modelod.orderID = int.Parse(((LinkButton)sender).CommandArgument);
            modelod = ob.getorders(modelod);
            if (modelod.orderStatus != "待确认" && !cancelsupplierorder())
            {
                //Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + (string)GetGlobalResourceObject("GResource", "alertcancelorderfail") + "'); </script>");
                //return;
            }
            //ob.Delete(modelod.orderID);
                modelod.orderStatus = "已取消";
                ob.Update(modelod);
                modelCu.customerID = modelod.customerID;
                modelCu = Cb.getCustomer(modelCu);
                modelCu.customerBudget += modelod.examTotalFee;
                Cb.update(modelCu);
                Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + (string)GetGlobalResourceObject("GResource", "alertcancelordersucc") + "'); </script>");
                this.GridView1.DataBind();
            if (true || !ob.hasarrangement(modelCu.customerID))
            {
                this.Panel1.Visible = true;
            }
        }
        catch(Exception ex)
        {
            Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + ex.ToString() + "'); </script>");
        }
    }

    protected void BtnDeleteRel_Click(object sender, EventArgs e)
    {
        try
        {
            modelod.orderID = int.Parse(((LinkButton)sender).CommandArgument);
            modelod = ob.getorders(modelod);
            //modelrel.relativeID = modelod.relativeID;
            //modelrel = rb.getRelative(modelrel);
            if (modelod.orderStatus != "待确认" )
            {
                try
                {
                    if (!cancelsupplierRelorder())
                    {
                        //Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + (string)GetGlobalResourceObject("GResource", "alertcancelorderfail") + "'); </script>");
                    }
                }
                catch
                {
                    //Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('提交到供应商出错！'); </script>");
                }
               
            }
            //ob.Delete(modelod.orderID);
            modelod.orderStatus = "已取消";
            ob.Update(modelod);
            Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + (string)GetGlobalResourceObject("GResource", "alertcancelordersucc") + "'); </script>");
            this.GridView2.DataBind();
            if (!ob.hasRelarrangement(modelCu.customerID))
            {
                this.Panel2.Visible = true;
            }
        }
        catch (Exception ex)
        {
            Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + ex.ToString() + "'); </script>");
        }
    }

    protected void BtnPay_Click(object sender, EventArgs e)
    {




        //modelod.orderID = int.Parse(((HyperLink)sender).CommandArgument);
        //modelod = ob.getorders(modelod);

        //if (modelod.payMethod == "转账支付")
        //{
        //    Response.Redirect("ordersubmitted.aspx?tran=" + int.Parse(((HyperLink)sender).CommandArgument), true);
        //}
        //else
        //{
        //    Response.Redirect("ordersubmitted.aspx?onlinepay=" + int.Parse(((HyperLink)sender).CommandArgument), true);
        //}

        //goalipay(modelod.orderID.ToString(), modelod.examBill.ToString());
       
    }
    public void goalipay(string out_trade_no, string total_fee)
    {

        //支付类型
        string payment_type = "1";
        string notify_url = System.Configuration.ConfigurationManager.AppSettings["notify_url"];
        string return_url = System.Configuration.ConfigurationManager.AppSettings["return_url"];
        string seller_email = "pay@medi-plus.cn";

        //string out_trade_no = ordernum.ToString();
        //订单名称
        string subject = (string)GetGlobalResourceObject("GResource", "MPpackage");
        //付款金额
        //string total_fee = orders.examBill.ToString();
        //订单描述
        string body = "";
        //商品展示地址
        string show_url = "";

        //防钓鱼时间戳
        string anti_phishing_key = Submit.Query_timestamp();
        //若要使用请调用类文件submit中的query_timestamp函数

        //客户端的IP地址
        string exter_invoke_ip = "";
        //非局域网的外网IP地址，如：221.0.0.1


        ////////////////////////////////////////////////////////////////////////////////////////////////

        //把请求参数打包成数组
        SortedDictionary<string, string> sParaTemp = new SortedDictionary<string, string>();
        sParaTemp.Add("partner", Config.Partner);
        sParaTemp.Add("_input_charset", Config.Input_charset.ToLower());
        sParaTemp.Add("service", "create_direct_pay_by_user");
        sParaTemp.Add("payment_type", payment_type);
        sParaTemp.Add("notify_url", notify_url);
        sParaTemp.Add("return_url", return_url);
        sParaTemp.Add("seller_email", seller_email);
        sParaTemp.Add("out_trade_no", out_trade_no);
        sParaTemp.Add("subject", subject);
        sParaTemp.Add("total_fee", total_fee);
        sParaTemp.Add("body", body);
        sParaTemp.Add("show_url", show_url);
        sParaTemp.Add("anti_phishing_key", anti_phishing_key);
        sParaTemp.Add("exter_invoke_ip", exter_invoke_ip);

        //建立请求
        string sHtmlText = Submit.BuildRequest(sParaTemp, "get", "确认");
        Response.Write(sHtmlText);
    }

    protected void GridView12_RowDataBound(object sender, GridViewRowEventArgs e)
    {
        if (e.Row.RowType == DataControlRowType.DataRow)
        {
            TableCell tc = e.Row.Cells[3];
            if (tc.Text == "爱康国宾")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "ikang");
            }
            else if (tc.Text == "美年大健康")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "meinian");
            }
            else if (tc.Text == "慈铭体检")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "ciming");
            }
            else if (tc.Text == "其他")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "other");
            }

            tc = e.Row.Cells[7];
            if (tc.Text == "待确认")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "os_saved");
            }
            else if (tc.Text == "待付款")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "os_waitpay");
            }
            else if (tc.Text == "待转账")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "os_waittransfer");
            }
            else if (tc.Text == "约检成功")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "os_paid");
            }
            else if (tc.Text == "已体检")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "os_checked");
            }
            else if (tc.Text == "已完成")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "os_finish");
            }
            else if (tc.Text == "已取消")
            {
                tc.Text = (string)GetGlobalResourceObject("GResource", "os_cancel");
            }
            if (modelCu.packagecode == "入职体检")
            {
                e.Row.Cells[4].Text = "入职体检套餐";
            }
        }

    
    }
}