using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Text.RegularExpressions;
using MeiNianWebRef;
using System.Web.Script.Serialization;
using Subgurim.Controles;
using System.IO;
using System.Xml;
using Com.Alipay;
using System.Collections;
using ikang;

public partial class reserverelexam3 : PageBases
{
    DBunit.SQLAccess dbsql = new DBunit.SQLAccess();
    Model.tab_customers modelCu = new Model.tab_customers();
    Model.tab_relatives modelrel = new Model.tab_relatives();
    Model.tab_orders orders = new Model.tab_orders();
    Bll.CustomerBll Cb = new Bll.CustomerBll();
    Bll.SupplierBll sb = new Bll.SupplierBll();
    Bll.packageBll pb = new Bll.packageBll();
    Bll.uppkgBll ub = new Bll.uppkgBll();
    Bll.OrdersBll ob = new Bll.OrdersBll();
    Bll.examcardBll eb = new Bll.examcardBll();
    Bll.companyBll comb = new Bll.companyBll();
    Bll.RelativeBLL rb = new Bll.RelativeBLL();
    Bll.supplierpackageBll spb = new Bll.supplierpackageBll();
    reserveexamcommon rc = new reserveexamcommon();

    Bll.deliveryaddressBll db = new Bll.deliveryaddressBll();

    GMap GMap1 = new GMap();

    PublicClass pc = new PublicClass();
    ikangservice iks = new ikangservice();
    ikangmember ikm = new ikangmember();
    HealthService mns = new HealthService();
    //接收省份的集合
    DataSet ds_Province;
    //接收市的集合
    DataSet ds_City;
    //接收区的集合
    DataSet ds_Area;
    DateTime firstdate;
    DateTime lastdate;
    string DOB;
    public string classmale, classfemale, classmarried, classunmarried, branchmapclass = "hidden", newaddressclass = "hidden", closscompanyaddressclass = "hidden";
    public string supplierlistcontentikang, supplierlistcontentciming, supplierlistcontentmeinian;
    int uppkgcount = -1;
    public string continue2class = "hidden", xiyaclass = "hidden";
    public string hideik = "", hidemn = "";
    public int limit1, limit2, limit3, limit4, limit5, limit6, limit7, limit8, limit9, limit10;
    public string supplierpackagecode = "";
    protected void Page_Load(object sender, EventArgs e)
    {

        if (!Page.IsPostBack)
        {
          //  this.CheckUser((Hashtable)Application["Online"]);

        }
        //return;
        modelCu.customerID = int.Parse(Session["id"].ToString());
        modelCu = Cb.getCustomer(modelCu);


        modelrel.relativeID = int.Parse(Session["relativeID"].ToString());
        modelrel = rb.getRelative(modelrel);
        Bll.companyBll comb = new Bll.companyBll();

        if (comb.getcandownloaddianzibaog(modelCu.customerCompany) == "0")
        {
            this.CheckBox100.Visible = false;
        }

        cloosecompanyaddress(Session["Compan"].ToString(), Session["provence"].ToString());

        if (!Page.IsPostBack)
        {
            if (!fillbranchexam(sender, e))
            {
                Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + (string)GetGlobalResourceObject("GResource", "bindikcardfailed") + "');</script>");
                branchmapclass = "";
                return;
            }
        }

        filladdresses();


        if (!Page.IsPostBack)
        {
            //ViewState["province"] = Request["province"];
            //ViewState["city"] = Request["city"];
            //initcityDilivery(sender, e);
            rc.customizeitems(modelCu.customerCompany, RadioButton9, RadioButton5, RadioButton6, Panel_platformpay, this.TextBoxPA);
        }


init();
processpanel();
        this.Panel4.Visible = true;
    }


    void processpanel()
    {
        filladdresses();
        if (this.RadioButton7.Checked)
        {
            newaddressclass = "";
        }
        if (this.RadioButton5.Checked)
        {
            closscompanyaddressclass = "";
        }
        for (int i = 0; i < this.CheckBoxList1.Items.Count; i++)
        {
            if (this.CheckBoxList1.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList1.Items[i].Attributes.Add("class", "hidden");
            }
            else
            {
                this.CheckBoxList1.Items[i].Attributes.Remove("class");
            }
        }
        for (int i = 0; i < this.CheckBoxList2.Items.Count; i++)
        {
            if (this.CheckBoxList2.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList2.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList3.Items.Count; i++)
        {
            if (this.CheckBoxList3.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList3.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList4.Items.Count; i++)
        {
            if (this.CheckBoxList4.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList4.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList5.Items.Count; i++)
        {
            if (this.CheckBoxList5.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList5.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList6.Items.Count; i++)
        {
            if (this.CheckBoxList6.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList6.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList7.Items.Count; i++)
        {
            if (this.CheckBoxList7.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList7.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList8.Items.Count; i++)
        {
            if (this.CheckBoxList8.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList8.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList9.Items.Count; i++)
        {
            if (this.CheckBoxList9.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList9.Items[i].Attributes.Add("class", "hidden");
            }
        }
        for (int i = 0; i < this.CheckBoxList10.Items.Count; i++)
        {
            if (this.CheckBoxList10.Items[i].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = i;
                this.CheckBoxList10.Items[i].Attributes.Add("class", "hidden");
            }
        }
        if (CheckBoxList1.Items[0].Text != "")
            limit1 = ub.getuppkglimit(CheckBoxList1.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList2.Items[0].Text != "")
            limit2 = ub.getuppkglimit(CheckBoxList2.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList3.Items[0].Text != "")
            limit3 = ub.getuppkglimit(CheckBoxList3.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList4.Items[0].Text != "")
            limit4 = ub.getuppkglimit(CheckBoxList4.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList5.Items[0].Text != "")
            limit5 = ub.getuppkglimit(CheckBoxList5.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList6.Items[0].Text != "")
            limit6 = ub.getuppkglimit(CheckBoxList6.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList7.Items[0].Text != "")
            limit7 = ub.getuppkglimit(CheckBoxList7.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList8.Items[0].Text != "")
            limit8 = ub.getuppkglimit(CheckBoxList8.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList9.Items[0].Text != "")
            limit9 = ub.getuppkglimit(CheckBoxList9.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        if (CheckBoxList10.Items[0].Text != "")
            limit10 = ub.getuppkglimit(CheckBoxList10.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        Label60.Text = "可选" + limit1 + "项";
        Label61.Text = "可选" + limit2 + "项";
        Label62.Text = "可选" + limit3 + "项";
        Label63.Text = "可选" + limit4 + "项";
        Label64.Text = "可选" + limit5 + "项";
        Label65.Text = "可选" + limit6 + "项";
        Label66.Text = "可选" + limit7 + "项";
        Label67.Text = "可选" + limit8 + "项";
        Label68.Text = "可选" + limit9 + "项";
        Label69.Text = "可选" + limit10 + "项";
        if (CheckBoxList1.Items[0].Text == "")
            Label60.Visible = false;
        if (CheckBoxList2.Items[0].Text == "")
            Label61.Visible = false;
        if (CheckBoxList3.Items[0].Text == "")
            Label62.Visible = false;
        if (CheckBoxList4.Items[0].Text == "")
            Label63.Visible = false;
        if (CheckBoxList5.Items[0].Text == "")
            Label64.Visible = false;
        if (CheckBoxList6.Items[0].Text == "")
            Label65.Visible = false;
        if (CheckBoxList7.Items[0].Text == "")
            Label66.Visible = false;
        if (CheckBoxList8.Items[0].Text == "")
            Label67.Visible = false;
        if (CheckBoxList9.Items[0].Text == "")
            Label68.Visible = false;
        if (CheckBoxList10.Items[0].Text == "")
            Label69.Visible = false;

    }

    void init()
    {
        //选择公司洗牙分店
        string s4 = "select canxiya from tab_company where CompanyName='" + Session["Company"].ToString() + "'";
        DataTable dt4 = comb.Select(s4);
        if (dt4.Rows[0][0].ToString() == "1")
        {
            //this.Panel17.Visible = true;
            xiyaclass = "";
            rc.fillxiyasupplier(modelCu, this.com_Province, this.com_City, this.RadioButtonList1);
        }
        else
        {
            //this.Panel17.Visible = false;
        }
    }




    void initcityDilivery(object sender, EventArgs e)
    {
        try
        {

            ds_Province = DBHelper.GetSet("select * from province");
            for (int i = 0; i < ds_Province.Tables[0].Rows.Count; i++)
            {
                com_Province1.Items.Add(ds_Province.Tables[0].Rows[i][2].ToString());
            }
            int proindex, cityindex;
            string province = "", city = "";
            if (modelCu.customerProvince != "")
            {
                province = modelCu.customerProvince;
            }
            else if (modelCu.customerCompanyProvince != "")
            {
                province = modelCu.customerCompanyProvince;
            }

            if (modelCu.customerCity != "")
            {
                city = modelCu.customerCity;
            }
            else if (modelCu.customerCompanyCity != "")
            {
                city = modelCu.customerCompanyCity;
            }
            if (province != "")
            {
                proindex = this.com_Province1.Items.IndexOf(this.com_Province1.Items.FindByText(province));
                if (proindex > 0)
                {
                    com_Province1.SelectedIndex = proindex;
                    com_Province1_SelectedIndexChanged(sender, e);
                    if (city != "")
                    {
                        cityindex = this.com_City.Items.IndexOf(this.com_City1.Items.FindByText(city));
                        if (cityindex > 0)
                        {
                            com_City1.SelectedIndex = cityindex;
                            com_City1_SelectedIndexChanged(sender, e);

                        }
                    }
                }

            }
        }
        catch (Exception)
        {
            Page.ClientScript.RegisterStartupScript(Page.GetType(), "message", "<script language='javascript' defer>alert('数据库连接错误！');</script>");
        }
    }



    protected void com_Province1_SelectedIndexChanged(object sender, EventArgs e)
    {
        com_City1.Items.Clear();
        com_City1.Items.Add((string)GetGlobalResourceObject("GResource", "selectCity"));
        ds_City = DBHelper.GetSet(string.Format("select name from city where provinceId in (select code from province where name='{0}')", com_Province1.Text));
        if (ds_City.Tables[0].Rows.Count == 0)
            com_City1.Items.Add(com_Province1.Text);
        for (int i = 0; i < ds_City.Tables[0].Rows.Count; i++)
            com_City1.Items.Add(ds_City.Tables[0].Rows[i][0].ToString());
        com_City1.SelectedIndex = 0;
    }
    protected void com_City1_SelectedIndexChanged(object sender, EventArgs e)
    {
        com_Area1.Items.Clear();
        com_Area1.Items.Add((string)GetGlobalResourceObject("GResource", "selectZone"));
        ds_Area = DBHelper.GetSet(string.Format("select name from area where cityId in (select code from city where name='{0}')", com_City1.Text));
        if (ds_Area.Tables[0].Rows.Count == 0)
            com_Area1.Items.Add(com_City1.Text);
        for (int i = 0; i < ds_Area.Tables[0].Rows.Count; i++)
            com_Area1.Items.Add(ds_Area.Tables[0].Rows[i][0].ToString());
        com_Area1.SelectedIndex = 0;
    }






    protected void Button6_Click(object sender, EventArgs e)
    {
        branchmapclass = "";
        Response.Redirect("reserverelexam2.aspx");
        //rc.fillbranch(true, ref branchmapclass, modelCu, com_Province, com_City, DropDownList1, GMap1, Literal1, ref  hideik, ref  hidemn, ref  continue2class, ref  supplierlistcontentikang, ref  supplierlistcontentciming, ref  supplierlistcontentmeinian, Panel14, Panel15, Panel16);
    }
    void cloosecompanyaddress(string company, string provence)
    {
        string s = "select * from deliveryaddress where company='" + company + "' and provence='" + provence + "'";
        DataTable dt = db.Select(s);
        //this.Repeater1.DataSource = dt;
        //this.Repeater1.DataBind();
        for (int i = 0; i < dt.Rows.Count; i++)
        {
            switch (i)
            {
                case 0: RadioButton11.Text = dt.Rows[0]["address"].ToString(); break;
                case 1: RadioButton12.Text = dt.Rows[1]["address"].ToString(); break;
                case 2: RadioButton13.Text = dt.Rows[2]["address"].ToString(); break;
                case 3: RadioButton18.Text = dt.Rows[3]["address"].ToString(); break;
                case 4: RadioButton19.Text = dt.Rows[4]["address"].ToString(); break;
                default: break;
            }

        }
        if (RadioButton11.Text == "") RadioButton11.Attributes.Add("class", "hidden");
        if (RadioButton12.Text == "") RadioButton12.Attributes.Add("class", "hidden");
        if (RadioButton13.Text == "") RadioButton13.Attributes.Add("class", "hidden");
        if (RadioButton18.Text == "") RadioButton18.Attributes.Add("class", "hidden");
        if (RadioButton19.Text == "") RadioButton19.Attributes.Add("class", "hidden");

        //if (company.ToLower() == "exeltis" && provence != "上海市")
        //{
        //    this.RadioButton5.Visible = false;
        //}
        //else
        //{
        //    this.RadioButton5.Visible = true;
        //}
    }
    protected void Button4_Click(object sender, EventArgs e)
    {
        cloosecompanyaddress(Session["Company"].ToString(), com_Province.SelectedValue);
        init();
     
        if (false && this.DropDownList4.Items.Count <= 0)
        {
            this.Button6_Click(sender, e);
            Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + (string)GetGlobalResourceObject("GResource", "alertnoavailabedate") + "'); </script>");
            return;
        }
        filladdresses();
        this.Panel4.Visible = true;
    }


    private void filladdresses()
    {
        string address = modelCu.customerAllAddr;
        if (!string.IsNullOrEmpty(address))
        {
            string[] sArray = address.Split('|');

            foreach (string s in sArray)
            {
                Literal div = new Literal();
                div.Text = "<div>";
                Literal divend = new Literal();
                divend.Text = "</div>";

                this.Panel3.Controls.Add(div);
                RadioButton rbtn = new RadioButton();
                rbtn.GroupName = "reportaddr";
                rbtn.Text = (string)GetGlobalResourceObject("GResource", "Toaddress") + s;
                rbtn.Attributes.Add("class", "radiopaperaddr");
                this.Panel3.Controls.Add(rbtn);
                this.Panel3.Controls.Add(divend);
            }
        }
    }

    void fillpackage()
    {
        string com = "select standby2 from tab_company where CompanyName='" + Session["Company"] + "'";
        DataTable dtcom = comb.Select(com);
        string s;
        DataTable dt;

        string isvip = dbsql.ExecuteSc("select VIP from tab_package where packagecode='" + this.DropDownList2.SelectedValue + "'").ToString();
        this.HyperLink2.NavigateUrl = "viewpackagedetail.aspx?pc=" + this.DropDownList2.SelectedValue + "&isvip=" + isvip;

        supplierpackagecode = makepackagecode();
        Session["supplierpackagecode"] = makepackagecode();
        s = "select price from supplierpackage where suppliercode='" + supplierpackagecode + "'";
        DataTable dtprice = spb.Select(s);

        s = "select budget,price,msg from tab_package where packagecode='" + this.DropDownList2.SelectedValue + "' order by price";
        dt = pb.Select(s);
        Literal lit = new Literal();
        lit.Text = dt.Rows[0]["msg"].ToString();

        double price = double.Parse(dt.Rows[0]["price"].ToString());
        //double price = double.Parse(dtprice.Rows[0]["price"].ToString());
        double budget = Cb.getbalance(modelCu.customerID);
        ViewState["doubleprice"] = price;
        ViewState["doublebudget"] = budget;

        this.TextBoxCharge1.Text = Math.Round(price, 2).ToString();
        double bill = price;
        this.TextBoxExCharge1.Text = Math.Round(bill, 2).ToString();

        if (bill > 0)
        {
            this.Panel9.Visible = true;
            this.Labelremainpoint.Text = "0";
            if (dtcom.Rows[0][0].ToString() != "1")
                this.Labelbill.Text = (price).ToString();
            else
            {
                if (this.CheckBox7.Checked)
                {
                    this.Labelbill.Text = (price + 30).ToString();
                    this.TextBoxCharge1.Text = (double.Parse(this.TextBoxCharge1.Text) + 30).ToString();
                }
                else
                    this.Labelbill.Text = (price).ToString();
            }
        }
        else
        {
            this.Labelremainpoint.Text = (budget - price).ToString();
            if (dtcom.Rows[0][0].ToString() != "1")
                this.Labelbill.Text = "0";
            else
            {
                if (this.CheckBox7.Checked)
                {
                    this.Labelbill.Text = "30";
                    this.TextBoxCharge1.Text = (double.Parse(this.TextBoxCharge1.Text) + 30).ToString();
                }
                else
                    this.Labelbill.Text = "0";
            }
            this.Panel9.Visible = false;
        }
        this.TextBoxCharge2.Text = "0";

    }

 
    private bool fillbranchexam(object sender, EventArgs e)
    {
        bool isman = modelrel.relativeGender == "男" ? true : false;
        bool isunmarried = modelrel.relativeMarriageStatus == "未婚" ? true : false;
        string validdate = "";
        this.DropDownList4.Items.Clear();
        string s = "select type,supplier,branch,hospid,note,city from tab_suppliers where id='" + Session["abc"].ToString() + "'";
        DataTable dt = sb.GetAny(s);

        if (dt.Rows[0]["supplier"].ToString() == "爱康国宾")
        {
            //if (!bindikcard())
            if (!MediPlus.reserveexam.bindikcard(modelrel, modelCu,
                modelrel.relativeName, isman.ToString(), isunmarried.ToString(),
                  modelrel.relativeMobile, modelrel.relativeIDcard != "" ? modelrel.relativeIDcard : modelrel.relativeCustomer.ToString()))
            {
                Session["bindcard"] = "error";
                //return false;()
            }
        }
        Session["shengfen"] = dt.Rows[0]["city"].ToString();
        Session["chengshi"] = dt.Rows[0]["supplier"].ToString() + " " + dt.Rows[0]["branch"].ToString();
        Session["branchtype"] = dt.Rows[0]["type"].ToString().Substring(0, 2);
        Session["hospid"] = dt.Rows[0]["hospid"].ToString();
        if (Session["branchtype"].ToString() == "网络")
        {
            if (this.Panel4.Visible == false)
            {
                validdate = rc.getvaliddate(dt.Rows[0]["supplier"].ToString(), dt.Rows[0]["hospid"].ToString());
            }
        }

        rc.fillavailbedate(dt.Rows[0]["supplier"].ToString(), dt.Rows[0]["note"].ToString(), validdate, this.DropDownList4, modelCu.customerCompany);

        Session["currentsupplier"] = dt.Rows[0]["supplier"];



        pc.fillbranchexam2(isman, isunmarried, this.CheckBox7, Session["currentsupplier"].ToString(), this.DropDownList2, this.Panelremainmoney, modelCu,modelrel, true, sender, e);
        this.DropDownList2_SelectedIndexChanged(sender, e);

        return true;
    }
    protected void DropDownList2_SelectedIndexChanged(object sender, EventArgs e)
    {
        string s;
        DataTable dt;

        if (DropDownList2.SelectedIndex <= 0)
        {
            return;
        }
        for (int j = 0; j < 10; j++)
        {
            CheckBoxList1.Items[j].Text = "";
            CheckBoxList2.Items[j].Text = "";
            CheckBoxList3.Items[j].Text = "";
            CheckBoxList4.Items[j].Text = "";
            CheckBoxList5.Items[j].Text = "";
            CheckBoxList6.Items[j].Text = "";
            CheckBoxList7.Items[j].Text = "";
            CheckBoxList8.Items[j].Text = "";
            CheckBoxList9.Items[j].Text = "";
            CheckBoxList10.Items[j].Text = "";
            CheckBoxList1.Items[j].Selected = false;
            CheckBoxList2.Items[j].Selected = false;
            CheckBoxList3.Items[j].Selected = false;
            CheckBoxList4.Items[j].Selected = false;
            CheckBoxList5.Items[j].Selected = false;
            CheckBoxList6.Items[j].Selected = false;
            CheckBoxList7.Items[j].Selected = false;
            CheckBoxList8.Items[j].Selected = false;
            CheckBoxList9.Items[j].Selected = false;
            CheckBoxList10.Items[j].Selected = false;
        }
        fillpackage();
        //清空每个CheckBoxList

        s = "select * from tab_uppkg where packagecode='" + this.DropDownList2.SelectedValue + "'";
        dt = ub.Select(s);

        string isvip = dbsql.ExecuteSc("select VIP from tab_package where packagecode='" + this.DropDownList2.SelectedValue + "'").ToString();
        //this.DropDownList3.Items.Clear();
        //this.DropDownList3.Items.Add((String)GetLocalResourceObject("DropDownList3Resource1"));
        string title;
        double price;
        int i;
        if (dt.Rows.Count > 0)
        {
            this.CheckBoxList1.Visible = true;
            this.HyperLink8.Visible = true;
            this.HyperLink8.NavigateUrl = "viewuppackagedetail.aspx?pc=" + dt.Rows[0]["uppkgcode"] + "&isvip=" + isvip;
        }
        else
        {
            this.Label59.Visible = false;
            this.HyperLink8.Visible = false;
            this.CheckBoxList1.Visible = false;
        }

        int currentgroup = 0;
        int currentindex = 0;
        CheckBoxList cblist;



        if (dt.Rows.Count > 0)
        {
            currentgroup = 1;
            for (i = 0; i < dt.Rows.Count; i++)
            {
                if (Session["language"] != null && Session["language"].ToString() == "en-us")
                {
                    title = dt.Rows[i]["note_eng"].ToString();
                }
                else
                {
                    title = dt.Rows[i]["note"].ToString();
                }

                price = double.Parse(dt.Rows[i]["price"].ToString());
                if (price > 0.0)
                {
                    title += " +" + Math.Round(price, 2).ToString() + (string)GetGlobalResourceObject("GResource", "Yuan");
                }


                if (dt.Rows[i]["groupname"].ToString() == currentgroup.ToString())
                {

                }
                else
                {
                    switch (currentgroup)
                    {
                        case 1: cblist = this.CheckBoxList1; break;
                        case 2: cblist = this.CheckBoxList2; break;
                        case 3: cblist = this.CheckBoxList3; break;
                        case 4: cblist = this.CheckBoxList4; break;
                        case 5: cblist = this.CheckBoxList5; break;
                        case 6: cblist = this.CheckBoxList6; break;
                        case 7: cblist = this.CheckBoxList7; break;
                        case 8: cblist = this.CheckBoxList8; break;
                        case 9: cblist = this.CheckBoxList9; break;
                        case 10: cblist = this.CheckBoxList10; break;
                        default: cblist = this.CheckBoxList1; break;
                    }
                    //processpanel();



                    currentgroup++;
                    currentindex = 0;

                }

                switch (currentgroup)
                {
                    case 1: cblist = this.CheckBoxList1; break;
                    case 2: cblist = this.CheckBoxList2; break;
                    case 3: cblist = this.CheckBoxList3; break;
                    case 4: cblist = this.CheckBoxList4; break;
                    case 5: cblist = this.CheckBoxList5; break;
                    case 6: cblist = this.CheckBoxList6; break;
                    case 7: cblist = this.CheckBoxList7; break;
                    case 8: cblist = this.CheckBoxList8; break;
                    case 9: cblist = this.CheckBoxList9; break;
                    case 10: cblist = this.CheckBoxList10; break;
                    default: cblist = this.CheckBoxList1; break;
                }

                cblist.Items[currentindex].Text = title;
                cblist.Items[currentindex].Value = price.ToString() + "," + dt.Rows[i]["uppkgcode"];

                currentindex++;
            }

        }
        processpanel();




        //下面的for不要了
        /*
        for (i = 0; i < dt.Rows.Count; i++)
        {
            if (Session["language"] != null && Session["language"].ToString() == "en-us")
            {
                title = dt.Rows[i]["note_eng"].ToString();
            }
            else
            {
                title = dt.Rows[i]["note"].ToString();
            }
            price = double.Parse(dt.Rows[i]["price"].ToString());
            if (price > 0.0)
            {
                title += "+" + Math.Round(price, 2).ToString() + (string)GetGlobalResourceObject("GResource", "Yuan");
            }
            //if (Session["language"] != null && Session["language"].ToString() == "en-us")
            //{
            //    title += " " + dt.Rows[i]["msg_eng"].ToString();
            //}
            //else
            //{
            //    title += " " + dt.Rows[i]["msg"].ToString();
            //}
            this.CheckBoxList1.Items[i].Text = title;
            this.CheckBoxList1.Items[i].Value = price.ToString() + "," + dt.Rows[i]["uppkgcode"];
            this.CheckBoxList1.Items[i].Selected = false;
            //this.DropDownList3.Items.Add(new ListItem(title, dt.Rows[i]["id"].ToString()));
        }
        //i--;
        for (int j = 0; j < 12; j++)
        {
            if (this.CheckBoxList1.Items[j].Text == "")
            {
                if (uppkgcount == -1) uppkgcount = j;
                this.CheckBoxList1.Items[j].Attributes.Add("class", "hidden");
            }
        }*/

    }
    protected void DropDownList3_SelectedIndexChanged(object sender, EventArgs e)
    {
        this.TextBoxCharge2.Text = "";
        if (DropDownList3.SelectedIndex <= 0) return;

        filluppkg();
    }

    void filluppkg()
    {
        string s;
        DataTable dt;

        s = "select price,msg from tab_uppkg where id=" + this.DropDownList3.SelectedValue;
        dt = ub.Select(s);

        this.TextBoxCharge2.Text = Math.Round(double.Parse(dt.Rows[0]["price"].ToString()), 2).ToString();
        this.Panel9.Visible = true;

        Literal lit = new Literal();
        lit.Text = dt.Rows[0]["msg"].ToString();
    }
    protected void Button5_Click(object sender, EventArgs e)
    {
        if (this.DropDownList2.SelectedIndex == 0 || this.DropDownList2.SelectedValue == "请选择")
        {
            Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('请选择套餐！');</script>");
            return;
        }

        if (this.Panel9.Visible)
        {
            if (this.RadioButton8.Checked || this.RadioButton9.Checked || this.RadioButton10.Checked)
            {
                Response.Redirect("reserverelexam4.aspx?yuyue=" + this.DropDownList4.SelectedValue + "&tijian=" + this.DropDownList2.SelectedItem.Text + "&fuke=" + this.CheckBox7.Checked + "&jiabao=" + jiaxiangbao() + "&fufei=" + double.Parse(this.Labelbill.Text).ToString() + "&fq=" + this.RadioButton8.Checked + "&fw=" + this.RadioButton9.Checked + "&fe=" + this.RadioButton10.Checked + "&jiao=" + this.DropDownList2.SelectedValue + "&chuag=" + this.DropDownList2.SelectedItem.Text + "&value=" + this.CheckBoxList1.SelectedValue + "&shuzi=" + this.CheckBoxList1.SelectedIndex + "&tijiao=" + makepackagecode() + "&relativeID=" + Request["relativeID"] + "&baog=" + this.CheckBox9.Checked+"&yao="+this.RadioButton5.Checked);
            }
            else
            {
                Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('" + (string)GetGlobalResourceObject("GResource", "errorpaymothod") + "');</script>");
                return;
            }
            Response.Redirect("reserverelexam4.aspx?yuyue=" + this.DropDownList4.SelectedValue + "&tijian=" + this.DropDownList2.SelectedItem.Text + "&fuke=" + this.CheckBox7.Checked + "&jiabao=" + jiaxiangbao() + "&fufei=" + double.Parse(this.Labelbill.Text).ToString() + "&fq=" + this.RadioButton8.Checked + "&fw=" + this.RadioButton9.Checked + "&fe=" + this.RadioButton10.Checked + "&jiao=" + this.DropDownList2.SelectedValue + "&chuag=" + this.DropDownList2.SelectedItem.Text + "&value=" + this.CheckBoxList1.SelectedValue + "&shuzi=" + this.CheckBoxList1.SelectedIndex + "&tijiao=" + makepackagecode()+"&baog="+ this.CheckBox9.Checked + "&yao=" + this.RadioButton5.Checked);
        }

       
    }


    string jiaxiangbao()
    {
        if (this.CheckBox7.Checked)
        {
            this.Label50.Text += " +妇科检查";
        }
        this.Label52.Text = "";
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList1.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList1.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList2.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList2.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList3.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList3.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList4.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList4.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList5.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList5.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList6.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList6.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList7.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList7.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList8.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList8.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList9.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList9.Items[i].Text;
            }
        }
        for (int i = 0; i < 10; i++)
        {
            if (CheckBoxList10.Items[i].Selected)
            {
                if (this.Label52.Text != "")
                    this.Label52.Text += ",";
                this.Label52.Text += CheckBoxList10.Items[i].Text;
            }
        }
        return this.Label52.Text;
    }
    protected void Button2_Click(object sender, EventArgs e)
    {
        branchmapclass = "";
        Response.Redirect("reserverelexam2.aspx", true);
    }


    string makepackagecode()
    {
        string mpcode = this.DropDownList2.SelectedValue;
        for (int k = 0; k < CheckBoxList1.Items.Count; k++)
        {
            if (CheckBoxList1.Items[k].Text == "") continue;
            if (CheckBoxList1.Items[k].Selected)
            {
                mpcode += CheckBoxList1.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList2.Items.Count; k++)
        {
            if (CheckBoxList2.Items[k].Text == "") continue;
            if (CheckBoxList2.Items[k].Selected)
            {
                mpcode += CheckBoxList2.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList3.Items.Count; k++)
        {
            if (CheckBoxList3.Items[k].Text == "") continue;
            if (CheckBoxList3.Items[k].Selected)
            {
                mpcode += CheckBoxList3.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList4.Items.Count; k++)
        {
            if (CheckBoxList4.Items[k].Text == "") continue;
            if (CheckBoxList4.Items[k].Selected)
            {
                mpcode += CheckBoxList4.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList5.Items.Count; k++)
        {
            if (CheckBoxList5.Items[k].Text == "") continue;
            if (CheckBoxList5.Items[k].Selected)
            {
                mpcode += CheckBoxList5.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList6.Items.Count; k++)
        {
            if (CheckBoxList6.Items[k].Text == "") continue;
            if (CheckBoxList6.Items[k].Selected)
            {
                mpcode += CheckBoxList6.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList7.Items.Count; k++)
        {
            if (CheckBoxList7.Items[k].Text == "") continue;
            if (CheckBoxList7.Items[k].Selected)
            {
                mpcode += CheckBoxList7.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList8.Items.Count; k++)
        {
            if (CheckBoxList8.Items[k].Text == "") continue;
            if (CheckBoxList8.Items[k].Selected)
            {
                mpcode += CheckBoxList8.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList9.Items.Count; k++)
        {
            if (CheckBoxList9.Items[k].Text == "") continue;
            if (CheckBoxList9.Items[k].Selected)
            {
                mpcode += CheckBoxList9.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        for (int k = 0; k < CheckBoxList10.Items.Count; k++)
        {
            if (CheckBoxList10.Items[k].Text == "") continue;
            if (CheckBoxList10.Items[k].Selected)
            {
                mpcode += CheckBoxList10.Items[k].Value.Split(',')[1];
            }
            else
            {
                mpcode += "";
            }
        }
        string asd = mpcode;
        return spb.getsupplierpackage(mpcode);
    }
    void goalipay(int ordernum)
    {

        //支付类型
        string payment_type = "1";
        string notify_url = System.Configuration.ConfigurationManager.AppSettings["notify_url"];
        string return_url = System.Configuration.ConfigurationManager.AppSettings["return_url"];
        string seller_email = "pay@medi-plus.cn";

        string out_trade_no = ordernum.ToString();
        //订单名称
        string subject = (string)GetGlobalResourceObject("GResource", "MPpackage");
        //付款金额
        string total_fee = orders.examBill.ToString();
        //订单描述
        string body = orders.examPackage;
        //商品展示地址
        string show_url = "";

        //防钓鱼时间戳
        string anti_phishing_key = Submit.Query_timestamp();
        //若要使用请调用类文件submit中的query_timestamp函数

        //客户端的IP地址
        string exter_invoke_ip = "";
        //非局域网的外网IP地址，如：221.0.0.1


        ////////////////////////////////////////////////////////////////////////////////////////////////

        //把请求参数打包成数组
        SortedDictionary<string, string> sParaTemp = new SortedDictionary<string, string>();
        sParaTemp.Add("partner", Config.Partner);
        sParaTemp.Add("_input_charset", Config.Input_charset.ToLower());
        sParaTemp.Add("service", "create_direct_pay_by_user");
        sParaTemp.Add("payment_type", payment_type);
        sParaTemp.Add("notify_url", notify_url);
        sParaTemp.Add("return_url", return_url);
        sParaTemp.Add("seller_email", seller_email);
        sParaTemp.Add("out_trade_no", out_trade_no);
        sParaTemp.Add("subject", subject);
        sParaTemp.Add("total_fee", total_fee);
        sParaTemp.Add("body", body);
        sParaTemp.Add("show_url", show_url);
        sParaTemp.Add("anti_phishing_key", anti_phishing_key);
        sParaTemp.Add("exter_invoke_ip", exter_invoke_ip);

        //建立请求
        string sHtmlText = Submit.BuildRequest(sParaTemp, "get", "确认");
        Response.Write(sHtmlText + "<script>window.location.href = 'ordersubmitted.aspx?onlinepay=yes';</script>");
    }
    protected void CheckBoxList1_SelectedIndexChanged(object sender, EventArgs e)
    {
        Session["Panel17"] = this.Panel17.Visible;
        /*
        string com = "select standby2 from tab_company where CompanyName='" + Session["Company"] + "'";
        DataTable dtcom = comb.Select(com);

        string uppkgtype = pb.getuppkgtype(this.DropDownList2.SelectedValue);
        string uppkgname = "";
        double remainpoint = double.Parse(this.Labelremainpoint.Text);
        double bill = double.Parse(this.TextBoxExCharge1.Text);
        double upprice = 0;

        if (uppkgtype == "1")
        {
            if (this.TextBoxCBL.Text != "")
            {
                this.CheckBoxList1.Items[int.Parse(this.TextBoxCBL.Text)].Selected = false;
            }
            if (this.CheckBoxList1.SelectedIndex >= 0)
            {
                this.TextBoxCBL.Text = this.CheckBoxList1.SelectedIndex.ToString();
                this.TextBoxCharge2.Text = this.CheckBoxList1.SelectedItem.Value.Split(',')[0];
                upprice = double.Parse(this.TextBoxCharge2.Text);
                uppkgname = this.CheckBoxList1.SelectedItem.Text;
            }
            else
            {
                this.TextBoxCBL.Text = "";
                this.TextBoxCharge2.Text = "0";
            }
        }
        else
        {
            for (int i = 0; i < uppkgcount; i++)
            {
                if (this.CheckBoxList1.Items[i].Selected)
                {
                    upprice += double.Parse(this.CheckBoxList1.Items[i].Value.Split(',')[0]);
                    uppkgname += this.CheckBoxList1.Items[i].Text + ",";
                }
            }
            if (uppkgname.Length > 0)
            {
                uppkgname = uppkgname.Substring(0, uppkgname.Length - 1);
            }
        }

        this.TextBoxCharge2.Text = upprice.ToString();

        if (remainpoint > 0)
        {
            if (remainpoint - upprice >= 0)
            {
                this.Labelremainpoint.Text = (remainpoint - upprice).ToString();
                if (dtcom.Rows[0][0].ToString() != "1")
                    this.Labelbill.Text = "0";
                else
                {
                    if (this.CheckBox7.Checked)
                        this.Labelbill.Text = "30";
                    else
                        this.Labelbill.Text = "0";
                }
                if (this.Labelbill.Text == "0")
                {
                    this.Panel9.Visible = false;
                }
                else
                {
                    this.Panel9.Visible = true;
                }
            }
            else
            {
                this.Labelremainpoint.Text = "0";
                if (dtcom.Rows[0][0].ToString() != "1")
                    this.Labelbill.Text = (bill + upprice - remainpoint).ToString();
                else
                {
                    if (this.CheckBox7.Checked)
                        this.Labelbill.Text = (bill + upprice - remainpoint + 30).ToString();
                    else
                        this.Labelbill.Text = (bill + upprice - remainpoint).ToString();
                }
                //this.Labelbill.Text = (bill + upprice - remainpoint).ToString();
                this.Panel9.Visible = true;
            }

        }
        else
        {
            if (dtcom.Rows[0][0].ToString() != "1")
                this.Labelbill.Text = (bill + upprice).ToString();
            else
            {
                if (this.CheckBox7.Checked)
                    this.Labelbill.Text = (bill + upprice + 30).ToString();
                else
                    this.Labelbill.Text = (bill + upprice).ToString();
            }
            //this.Labelbill.Text = (bill + upprice).ToString();
            if (bill + upprice > 0)
            {
                this.Panel9.Visible = true;
            }
            else
            {
                this.Panel9.Visible = false;
            }
        }

        this.Label52.Text = uppkgname != "" ? uppkgname : (string)GetGlobalResourceObject("GResource", "na");*/
        rc.checkboxlistChanged(CheckBoxList1, TextBoxCBL, limit1, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
        if (Session["Panel17"] == "True")
        {
            this.Panel17.Visible = true;
        }
        else
        {
            this.Panel17.Visible = false;
        }
    }

    protected void CheckBox7_CheckedChanged(object sender, EventArgs e)
    {
        bool isman = modelrel.relativeGender == "男" ? true : false;
        bool isunmarried = modelrel.relativeMarriageStatus == "未婚" ? true : false;
        pc.fillbranchexam2(isman,isunmarried, this.CheckBox7, Session["currentsupplier"].ToString(), this.DropDownList2, this.Panelremainmoney, modelCu, modelrel, true, sender, e);
        this.DropDownList2_SelectedIndexChanged(sender, e);
    }
    protected void CheckBoxList2_SelectedIndexChanged(object sender, EventArgs e)
    {
        //limit2 = ub.getuppkglimit(CheckBoxList2.Items[0].Value.Split(',')[1], this.DropDownList2.SelectedValue);
        rc.checkboxlistChanged(CheckBoxList2, TextBoxCBL2, limit2, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList3_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList3, TextBoxCBL3, limit3, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList4_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList4, TextBoxCBL4, limit4, DropDownList2, supplierpackagecode, modelCu,
          Panel9, Labelremainpoint, Labelbill, CheckBox7
         , CheckBoxList1, CheckBoxList2, CheckBoxList3
         , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
         , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList5_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList5, TextBoxCBL5, limit5, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList6_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList6, TextBoxCBL6, limit6, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList7_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList7, TextBoxCBL7, limit7, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList8_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList8, TextBoxCBL8, limit8, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList9_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList9, TextBoxCBL9, limit9, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void CheckBoxList10_SelectedIndexChanged(object sender, EventArgs e)
    {
        rc.checkboxlistChanged(CheckBoxList10, TextBoxCBL10, limit10, DropDownList2, supplierpackagecode, modelCu,
         Panel9, Labelremainpoint, Labelbill, CheckBox7
        , CheckBoxList1, CheckBoxList2, CheckBoxList3
        , CheckBoxList4, CheckBoxList5, CheckBoxList6, CheckBoxList7, CheckBoxList8
        , CheckBoxList9, CheckBoxList10, true);
    }
    protected void RadioButton11_CheckedChanged(object sender, EventArgs e)
    {
        if (RadioButton11.Checked)
        {
            this.TextBoxPA.Text = this.RadioButton11.Text;
        }
        else if (RadioButton12.Checked)
        {
            this.TextBoxPA.Text = this.RadioButton12.Text;
        }
        else if (RadioButton13.Checked)
        {
            this.TextBoxPA.Text = this.RadioButton13.Text;
        }
        else if (RadioButton18.Checked)
        {
            this.TextBoxPA.Text = "配偶";
        }
        else if (RadioButton19.Checked)
        {
            this.TextBoxPA.Text = "子女";
        }

    }
}