using System;
using System.Data;
using System.Configuration;
using System.Collections;
using System.Web;
using System.Web.Security;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Web.UI.WebControls.WebParts;
using System.Web.UI.HtmlControls;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Data.OleDb;
using Model;
using Bll;

public partial class Admin_CustomersAdmin_editcompany : System.Web.UI.Page
{
    Bll.CustomerBll cb = new Bll.CustomerBll();
    Model.tab_customers modelCb = new Model.tab_customers();

    upExcel ue = new upExcel();

    DBunit.SQLAccess sql = new DBunit.SQLAccess();
    PublicClass pc = new PublicClass();
    DBunit.SQLAccess dbsql = new DBunit.SQLAccess();
    Bll.OrdersBll ob = new Bll.OrdersBll();
    protected void Page_Load(object sender, EventArgs e)
    {

       

    }
    //protected void Button3_Click(object sender, EventArgs e)
    //{
    //    int successfulcount = 0, errorcount = 0;
    //    try
    //    {
    //        if (this.FileUpload1.HasFile)
    //        {
    //            if (!ue.SaveUpFile("~/Admin/temp/", this.FileUpload1))//上传文件
    //            {
    //                throw new Exception("上传文件失败!");
    //            }

    //            DataTable inputdt = ue.InputExcel("取消资格员工名单");
    //            if (inputdt == null)
    //            {
    //                throw new Exception("Excel文件读取失败!");
    //            }

    //            int j;
    //            CustomerBll cust = new CustomerBll();
    //            tab_customers customer;
    //            StringBuilder erroritem = new StringBuilder();
    //            for (int i = 0; i < inputdt.Rows.Count; i++)
    //            {
    //                j = 0;
    //                customer = new tab_customers();
    //                customer.customerCode = inputdt.Rows[i][j++].ToString().Trim();//0
    //                customer.customerName = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerEmail = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerPrivateEmail = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerMobile = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerTel = inputdt.Rows[i][j++].ToString().Trim();//5
    //                customer.customerProvince = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCity = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerZone = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerAddress = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerAllAddr = inputdt.Rows[i][j++].ToString().Trim();//10
    //                customer.customerDefaultAddr = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerGender = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerMarriageStatus = inputdt.Rows[i][j++].ToString().Trim();
    //                if (inputdt.Rows[i][j] == null || inputdt.Rows[i][j].ToString() == "")
    //                {
    //                    //customer.customerDOB = DateTime.Parse("1800-1-1");
    //                    j++;
    //                }
    //                else
    //                {
    //                    customer.customerDOB = DateTime.Parse(inputdt.Rows[i][j++].ToString().Trim());
    //                }
    //                customer.customerNation = inputdt.Rows[i][j++].ToString().Trim();//15
    //                customer.customerIDcard = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCompany = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCompanycode = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerClass = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCompanyTel = inputdt.Rows[i][j++].ToString().Trim();//20
    //                customer.customerCompanyProvince = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCompanyCity = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCompanyZone = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCompanyAddress = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerCompanyBU = inputdt.Rows[i][j++].ToString().Trim();//25
    //                customer.customerVIP = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerBalance = double.Parse(inputdt.Rows[i][j++].ToString().Trim());
    //                customer.packagecode = inputdt.Rows[i][j++].ToString().Trim();
    //                customer.customerBudget = double.Parse(inputdt.Rows[i][j++].ToString().Trim());
    //                try
    //                {
    //                    string s = "update tab_customers set customerCompany=customerCompany+'离职' where customerIDcard='" + customer.customerIDcard + "' and customerCompany='" + customer.customerCompany + "'";
    //                    if (sql.ExecuteNonQuery(s) < 1)
    //                    {
    //                        errorcount++;
    //                    }
    //                    else
    //                    {
    //                        successfulcount++;
    //                    }

    //                }
    //                catch
    //                {
    //                    errorcount++;
    //                    erroritem.Append(customer.customerCode + ",\n");
    //                }
    //            }
    //            Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('操作已完成！其中成功修改员工" + successfulcount + "条，失败" + errorcount + "条" + erroritem.ToString() + "'); </script>");
               
    //        }
    //        else
    //        {
    //            throw new Exception("请选择Excel文件!");
    //        }
    //    }
    //    catch (Exception ex)
    //    {
    //        Page.ClientScript.RegisterClientScriptBlock(Page.GetType(), "message", " <script>alert('error:" + ex.Message + "'); </script>");
    //    }
    //}
    //protected void Button2_Click(object sender, EventArgs e)
    //{
    //    int sus = 0, err = 0;
    //    string errid = "";
    //    if (this.TextBox2.Text != "")
    //    {
    //        if (this.TextBox1.Text.Contains('-'))
    //        {
    //            string[] oid = this.TextBox1.Text.Split('-');
    //            string s = "select * from tab_customers where customerID>=" + oid[0] + " and customerID<=" + oid[1];
    //            DataTable dt = ob.Select(s);
    //            for (int i = 0; i < dt.Rows.Count; i++)
    //            {
    //                string pwd = ob.Select("select RIGHT(customerIDcard,6) from tab_customers where customerID=" + dt.Rows[i]["customerID"]).Rows[0][0].ToString();
    //                pwd = pc.md5(this.TextBox2.Text);
    //                string s = "update tab_customers set customerCompany=customerCompany+'离职' where customerIDcard='" + customer.customerIDcard +;
    //                int num = dbsql.ExecuteNonQuery(up);
    //                if (num > 0)
    //                {
    //                    sus++;
    //                }
    //                else
    //                {
    //                    err++;
    //                    errid += dt.Rows[i]["customerID"] + ",";
    //                }
    //            }
    //            Page.ClientScript.RegisterStartupScript(Page.GetType(), "message", "<script language='javascript' defer>alert('修改成功。成功" + sus + "条，失败" + err + "条，失败id：" + errid + "');</script>");
    //        }
    //    }
    //    else
    //    {
    //        Page.ClientScript.RegisterStartupScript(Page.GetType(), "message", "<script language='javascript' defer>alert('请输入密码！');</script>");
    //    }
    //}


    protected void Button2_Click(object sender, EventArgs e)
    {
        string s = "";
        int sus = 0, err = 0;
        string errid = "";
        if (this.TextBox2.Text != "")
        {
            if (this.TextBox1.Text.Contains('-')||this.TextBox1.Text.Contains(','))
            {
                string[] oid = this.TextBox1.Text.Split('-');
                if (this.TextBox1.Text.Contains('-'))
                {
                    s = "select * from tab_customers where customerID>=" + oid[0] + " and customerID<=" + oid[1];
                }
                else
                {
                    s = "select * from tab_customers where customerID in (" + oid[0] + ")";
                }
                DataTable dt = ob.Select(s);
                for (int i = 0; i < dt.Rows.Count; i++)
                {
                    string   pwd = this.TextBox2.Text;
                    string up = "update tab_customers set customerCompany=customerCompany+'" + pwd + "' where customerID=" + dt.Rows[i]["customerID"];
                    int num = dbsql.ExecuteNonQuery(up);
                    if (num > 0)
                    {
                        sus++;
                    }
                    else
                    {
                        err++;
                        errid += dt.Rows[i]["customerID"] + ",";
                    }
                }
                Page.ClientScript.RegisterStartupScript(Page.GetType(), "message", "<script language='javascript' defer>alert('离职成功。成功" + sus + "条，失败" + err + "条，失败id：" + errid + "');</script>");
            }
        }
        else
        {
            Page.ClientScript.RegisterStartupScript(Page.GetType(), "message", "<script language='javascript' defer>alert('请输入离职！');</script>");
        }
    }
}